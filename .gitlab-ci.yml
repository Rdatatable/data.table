variables:
  CRAN_MIRROR: "https://cloud.r-project.org"
  _R_CHECK_FORCE_SUGGESTS_: "false"
  _R_CHECK_NO_STOP_ON_TEST_ERROR_: "true"
  _R_CHECK_SYSTEM_CLOCK_: "false"  ## https://stackoverflow.com/questions/63613301/r-cmd-check-note-unable-to-verify-current-time
  TZ: "UTC"  ## to avoid 'Failed to create bus connection' from timedatectl via Sys.timezone() on Docker with R 3.4.
             ## Setting TZ for all GLCI jobs to isolate them from timezone. We could have a new GLCI job to test under
             ## a non-UTC timezone, although, that's what we do routinely in dev.
  R_REL_VERSION: "4.3"
  R_DEVEL_VERSION: "4.4"
  R_OLDREL_VERSION: "4.2"

stages:
  - dependencies
  - build
  - test
  - integration
  - deploy

.artifacts-template: &artifacts
  artifacts:
    expire_in: 2 weeks
    when: always
    paths:
      - bus

## mirror packages
# download all recursive dependencies once to be used across multiple test jobs
# sources and binaries for r-release, r-devel and r-oldrel
# cache between runs
mirror-packages:
  stage: dependencies
  tags:
    - linux
  image: registry.gitlab.com/jangorecki/dockerfiles/r-base-minimal
  cache:
    paths:
      - bus/$CI_JOB_NAME/cran
  script:
    - echo 'source(".ci/ci.R")' >> .Rprofile
    - mkdir -p bus/$CI_JOB_NAME/cran/src/contrib
    - Rscript -e 'mirror.packages(dcf.dependencies("DESCRIPTION", "all"), repos=Sys.getenv("CRAN_MIRROR"), repodir="bus/mirror-packages/cran")'
    - Rscript -e 'sapply(simplify=FALSE, setNames(nm=Sys.getenv(c("R_REL_VERSION","R_DEVEL_VERSION","R_OLDREL_VERSION"))), function(binary.ver) mirror.packages(type="win.binary", dcf.dependencies("DESCRIPTION", "all"), repos=Sys.getenv("CRAN_MIRROR"), repodir="bus/mirror-packages/cran", binary.ver=binary.ver))'
  <<: *artifacts

## build
# sources as tar.gz archive
# build vignettes
build:
  stage: build
  tags:
    - linux
  image: registry.gitlab.com/jangorecki/dockerfiles/r-base ## r-base-gcc after rstudio/markdown#108
  needs: ["mirror-packages"]
  before_script:
    - Rscript -e 'install.packages(c("knitr","rmarkdown"), repos=file.path("file:",normalizePath("bus/mirror-packages/cran")), quiet=TRUE)'
    - rm -r bus
    - sed -i '/^[[:space:]]*$/d' ./DESCRIPTION ## make last line end abruptly; i.e. without a final \n
    - echo "Revision:" $CI_COMMIT_SHA >> ./DESCRIPTION
  script:
    - R CMD build .
    - mkdir -p bus/$CI_JOB_NAME/cran/src/contrib
    - mv $(ls -1t data.table_*.tar.gz | head -n 1) bus/$CI_JOB_NAME/cran/src/contrib/.
    - Rscript -e 'tools::write_PACKAGES(contrib.url("bus/build/cran"), fields="Revision", addFiles=TRUE)'
  <<: *artifacts

## install deps aliases
.test-install-deps: &install-deps
  - Rscript -e 'source(".ci/ci.R"); install.packages(dcf.dependencies("DESCRIPTION", which="all"), repos=file.path("file:", normalizePath("bus/mirror-packages/cran", mustWork=FALSE)), quiet=TRUE)'
.test-install-deps-win: &install-deps-win
  - Rscript.exe -e "source('.ci/ci.R'); install.packages(dcf.dependencies('DESCRIPTION', which='all'), repos=file.path('file://',getwd(),'bus/mirror-packages/cran'), quiet=TRUE)"

## copy data.table tar.gz from bus R repo to current directory
.test-cp-src: &cp-src
  - cp $(ls -1t bus/build/cran/src/contrib/data.table_*.tar.gz | head -n 1) .
.test-cp-src-win: &cp-src-win
  - cp.exe $(ls.exe -1t bus/build/cran/src/contrib/data.table_*.tar.gz | head.exe -n 1) .

## move data.table tar.gz to bus
.test-mv-src: &mv-src
  - mkdir -p bus/$CI_JOB_NAME && mv $(ls -1t data.table_*.tar.gz | head -n 1) bus/$CI_JOB_NAME
.test-mv-src-win: &mv-src-win
  - mkdir.exe -p bus/$CI_JOB_NAME; mv.exe $(ls.exe -1t data.table_*.tar.gz | head.exe -n 1) bus/$CI_JOB_NAME

## move data.table binaries to bus R repo
.test-mv-bin-win: &mv-bin-win
  - mkdir.exe -p cran/bin/windows/contrib/$R_VERSION; mv.exe $(ls.exe -1t data.table_*.zip | head.exe -n 1) cran/bin/windows/contrib/$R_VERSION

## remove data.table tar.gz
.test-rm-src: &rm-src
  - rm $(ls -1t data.table_*.tar.gz | head -n 1)
.test-rm-src-win: &rm-src-win
  - rm.exe $(ls.exe -1t data.table_*.tar.gz | head.exe -n 1)

## install R on windows
.test-install-r-rel-win: &install-r-rel-win
  - curl.exe -s -o ../R-rel.exe https://cloud.r-project.org/bin/windows/base/old/4.3.2/R-4.3.2-win.exe; Start-Process -FilePath ..\R-rel.exe -ArgumentList "/VERYSILENT /DIR=C:\R" -NoNewWindow -Wait
.test-install-r-devel-win: &install-r-devel-win
  - curl.exe -s -o ../R-devel.exe https://cloud.r-project.org/bin/windows/base/R-devel-win.exe; Start-Process -FilePath ..\R-devel.exe -ArgumentList "/VERYSILENT /DIR=C:\R" -NoNewWindow -Wait
.test-install-r-oldrel-win: &install-r-oldrel-win
  - curl.exe -s -o ../R-oldrel.exe https://cloud.r-project.org/bin/windows/base/old/4.2.3/R-4.2.3-win.exe; Start-Process -FilePath ..\R-oldrel.exe -ArgumentList "/VERYSILENT /DIR=C:\R" -NoNewWindow -Wait

## install Rtools on windows
.test-install-rtools42-win: &install-rtools42-win
  - curl.exe -s -o ../rtools.exe https://cloud.r-project.org/bin/windows/Rtools/rtools42/files/rtools42-5355-5357.exe; Start-Process -FilePath ..\rtools.exe -ArgumentList "/VERYSILENT /DIR=C:\rtools42" -NoNewWindow -Wait
.test-install-rtools43-win: &install-rtools43-win
  - curl.exe -s -o ../rtools.exe https://cloud.r-project.org/bin/windows/Rtools/rtools43/files/rtools43-5863-5818.exe; Start-Process -FilePath ..\rtools.exe -ArgumentList "/VERYSILENT /DIR=C:\rtools43" -NoNewWindow -Wait

.test-template: &test
  stage: test
  needs: ["mirror-packages","build"]
  <<: *artifacts

.test-lin-template: &test-lin
  <<: *test
  tags:
    - linux

.test-win-template: &test-win
  <<: *test
  tags:
    - windows
    - shared-windows

#.test-mac-template: &test-mac
#  <<: *test
#  tags:
#    - macosx

## most comprehensive tests
# force all suggests
# flags: gcc -O3 -flto -fno-common -Wunused-result
# tests for compilation warnings
test-rel-lin:
  <<: *test-lin
  image: registry.gitlab.com/jangorecki/dockerfiles/r-data.table
  needs: ["mirror-packages","build"]
  allow_failure: true ## temp workaround #5760
  variables:
    _R_CHECK_CRAN_INCOMING_: "FALSE"
    _R_CHECK_CRAN_INCOMING_REMOTE_: "FALSE"
    _R_CHECK_FORCE_SUGGESTS_: "TRUE"
    _R_CHECK_TESTS_NLINES_: "0"
    OPENBLAS_MAIN_FREE: "1"
  before_script:
    - apt-get update -q && apt-get install -y --no-install-recommends libcurl4-openssl-dev ## remove after #5749
    - *install-deps
    - *cp-src
    - rm -r bus
    - mkdir -p ~/.R
    - echo 'CFLAGS=-g -O3 -flto -fno-common -Wunused-result -fopenmp -Wall -pedantic -fstack-protector-strong -D_FORTIFY_SOURCE=2' > ~/.R/Makevars
    - echo 'CXXFLAGS=-g -O3 -flto -fno-common -Wunused-result -fopenmp -Wall -pedantic -fstack-protector-strong -D_FORTIFY_SOURCE=2' >> ~/.R/Makevars
  script:
    - *mv-src
    - cd bus/$CI_JOB_NAME
    - R CMD check $(ls -1t data.table_*.tar.gz | head -n 1)
    - *rm-src
    - (! grep "warning:" data.table.Rcheck/00install.out)

## vanilla minimal
# no suggested deps
# no vignettes or manuals
# no openmp
# flags: gcc -O0 -fno-openmp
test-rel-vanilla-lin:
  <<: *test-lin
  image: registry.gitlab.com/jangorecki/dockerfiles/r-base-gcc
  allow_failure: true ## temp workaround #5484
  before_script:
    - *cp-src
    - rm -r bus
    - mkdir -p ~/.R
    - echo 'CFLAGS=-g -O0 -fno-openmp -Wall -pedantic -fstack-protector-strong -D_FORTIFY_SOURCE=2' > ~/.R/Makevars
    - echo 'CXXFLAGS=-g -O0 -fno-openmp -Wall -pedantic -fstack-protector-strong -D_FORTIFY_SOURCE=2' >> ~/.R/Makevars
  script:
    - *mv-src
    - cd bus/$CI_JOB_NAME
    - R CMD check --no-manual --ignore-vignettes $(ls -1t data.table_*.tar.gz | head -n 1)
    - *rm-src

## R-release on Linux
# strict checks for 0 NOTEs
# extra NOTEs check and build pdf manual thus not from cran-lin template
test-rel-cran-lin:
  <<: *test-lin
  image: registry.gitlab.com/jangorecki/dockerfiles/r-base
  variables:
    _R_CHECK_CRAN_INCOMING_: "TRUE"           ## stricter --as-cran checks should run in dev pipelines continuously (not sure what they are though)
    _R_CHECK_CRAN_INCOMING_REMOTE_: "FALSE"   ## Other than no URL checking (takes many minutes) or 'Days since last update 0' NOTEs needed, #3284
    _R_CHECK_CRAN_INCOMING_TARBALL_THRESHOLD_: "7500000" ## bytes
    _R_CHECK_PKG_SIZES_THRESHOLD_: "7"        ## MB 'checking installed package size' NOTE
  before_script:
    - apt-get update -q && apt-get install -y --no-install-recommends libcurl4-openssl-dev ## temp workaround #5749
    - *install-deps
    - *cp-src
    - rm -r bus
    - mkdir -p ~/.R
    - echo 'CFLAGS=-g -O2 -fopenmp -Wall -pedantic -fstack-protector-strong -D_FORTIFY_SOURCE=2' > ~/.R/Makevars
    - echo 'CXXFLAGS=-g -O2 -fopenmp -Wall -pedantic -fstack-protector-strong -D_FORTIFY_SOURCE=2' >> ~/.R/Makevars
  script:
    - *mv-src
    - cd bus/$CI_JOB_NAME
    - R CMD check --as-cran $(ls -1t data.table_*.tar.gz | head -n 1)
    - *rm-src
    - >-
        Rscript -e 'l=tail(readLines("data.table.Rcheck/00check.log"), 1L); if (!identical(l, "Status: OK")) stop("Last line of ", shQuote("00check.log"), " is not ", shQuote("Status: OK"), " but ", shQuote(l)) else q("no")'

## R-devel on Linux
# TODO: --enable-strict-barrier --disable-long-double
# tests for compilation warnings
# tests for new notes
# thus allow_failure
test-dev-cran-lin:
  <<: *test-lin
  image: registry.gitlab.com/jangorecki/dockerfiles/r-devel
  allow_failure: true ## to not be blocked by changes in r-devel
  variables:
    _R_CHECK_CRAN_INCOMING_: "TRUE"
    _R_CHECK_CRAN_INCOMING_REMOTE_: "FALSE"
    _R_S3_METHOD_LOOKUP_BASEENV_AFTER_GLOBALENV_: "FALSE" ## detects S3 method lookup found on search path #4777
    _R_S3_METHOD_LOOKUP_REPORT_SEARCH_PATH_USES_: "TRUE"
  before_script:
    - *install-deps
    - *cp-src
    - rm -r bus
  script:
    - *mv-src
    - cd bus/$CI_JOB_NAME
    - R CMD check --as-cran --no-manual $(ls -1t data.table_*.tar.gz | head -n 1)
    - *rm-src
    - (! grep "warning:" data.table.Rcheck/00install.out)
    - >- ## this likely need an update but check fails now on complex NA so CI is not reaching here anyway
        Rscript -e 'l=tail(readLines("data.table.Rcheck/00check.log"), 1L); if (!identical(l, "Status: 3 NOTEs")) stop("Last line of ", shQuote("00check.log"), " is not ", shQuote("Status: 3 NOTEs"), " (size of tarball, installed package size, top-level files) but ", shQuote(l)) else q("no")'

## R 3.1.0
# stated dependency on R
test-310-cran-lin:
  image: registry.gitlab.com/jangorecki/dockerfiles/r-3.1.0
  <<: *test-lin
  before_script:
    - *install-deps
    - *cp-src
    - rm -r bus
  script:
    - *mv-src
    - cd bus/$CI_JOB_NAME
    - R CMD check --no-manual $(ls -1t data.table_*.tar.gz | head -n 1)
    - *rm-src

## R-release on Windows
# test and build binaries
test-rel-win:
  <<: *test-win
  variables:
    R_VERSION: "$R_REL_VERSION"
  before_script:
    - *install-r-rel-win
    - *install-rtools43-win
    - $ENV:PATH = "C:\R\bin;C:\rtools43\usr\bin;$ENV:PATH"
    - *install-deps-win
    - *cp-src-win
    - rm.exe -r bus
  script:
    - *mv-src-win
    - cd bus/$CI_JOB_NAME
    - R.exe CMD check --no-manual $(ls.exe -1t data.table_*.tar.gz | head.exe -n 1)
    - R.exe CMD INSTALL --build $(ls.exe -1t data.table_*.tar.gz | head.exe -n 1)
    - *rm-src-win
    - *mv-bin-win

## R-devel on Windows
# test and build binaries
test-dev-win:
  <<: *test-win
  variables:
    R_VERSION: "$R_DEVEL_VERSION"
  allow_failure: true ## temp workaround #5748
  before_script:
    - *install-r-devel-win
    - *install-rtools43-win
    - $ENV:PATH = "C:\R\bin;C:\rtools43\usr\bin;$ENV:PATH"
    - *install-deps-win
    - *cp-src-win
    - rm.exe -r bus
  script:
    - *mv-src-win
    - cd bus/$CI_JOB_NAME
    - R.exe CMD check --no-manual --ignore-vignettes $(ls.exe -1t data.table_*.tar.gz | head.exe -n 1)
    - R.exe CMD INSTALL --build $(ls.exe -1t data.table_*.tar.gz | head.exe -n 1)
    - *rm-src-win
    - *mv-bin-win

## R-oldrel on Windows
# test and build binaries
test-old-win:
  <<: *test-win
  variables:
    R_VERSION: "$R_OLDREL_VERSION"
  before_script:
    - *install-r-oldrel-win
    - *install-rtools42-win
    - $ENV:PATH = "C:\R\bin;C:\rtools42\usr\bin;$ENV:PATH"
    - *install-deps-win
    - *cp-src-win
    - rm.exe -r bus
  script:
    - *mv-src-win
    - cd bus/$CI_JOB_NAME
    - R.exe CMD check --no-manual --ignore-vignettes $(ls.exe -1t data.table_*.tar.gz | head.exe -n 1)
    - R.exe CMD INSTALL --build $(ls.exe -1t data.table_*.tar.gz | head.exe -n 1)
    - *rm-src-win
    - *mv-bin-win

## R-release on MacOS
# no macosx runner set yet
#test-rel-mac:
#  <<: *test-mac
#  variables:
#    R_VERSION: "$R_REL_VERSION"
#  before_script:
#    - *install-deps
#    - *cp-src
#    - rm -r bus
#  script:
#    - *mv-src
#    - cd bus/$CI_JOB_NAME
#    - R CMD check $(ls -1t data.table_*.tar.gz | head -n 1)
#    - R CMD INSTALL --build $(ls -1t data.table_*.tar.gz | head -n 1)
#    - mkdir -p cran/bin/macosx/el-capitan/contrib/$R_VERSION
#    - mv $(ls -1t data.table_*.tgz | head -n 1) cran/bin/macosx/el-capitan/contrib/$R_VERSION
#    - *rm-src
#    - *mv-bin-mac

## integrate artifacts
# merging package tarballs and binaries into single R repository
# rendering documentation
# setting up CRAN-like structure
# generating pkgdown website
integration:
  stage: integration
  image: registry.gitlab.com/jangorecki/dockerfiles/r-pkgdown
  tags:
    - linux
  only:
    - master
  needs: ["mirror-packages","build","test-rel-lin","test-rel-cran-lin","test-dev-cran-lin","test-rel-vanilla-lin","test-310-cran-lin","test-rel-win","test-dev-win","test-old-win"]
  script:
    - R --version
    - Rscript -e 'pkgdown::build_site(override=list(destination="./pkgdown"))'
    ## html manual, vignettes, repos, cran_web, cran_checks
    - echo 'source(".ci/ci.R"); source(".ci/publish.R")' >> .Rprofile
    ## list of available test-* jobs dynamically based on bus/test-* directories
    - Rscript -e 'cat("\ntest.jobs <- c(\n"); cat(paste0("  \"",list.files("bus",pattern="^test-"),"\" = \"data.table\""), sep=",\n"); cat(")\n")' >> .Rprofile
    - Rscript -e 'sapply(names(test.jobs), check.test, pkg="data.table", simplify=FALSE)'
    - mkdir -p bus/$CI_JOB_NAME
    ## delete any existing non-dev version of data.table
    - rm -f bus/mirror-packages/cran/src/contrib/data.table_*.tar.gz
    - rm -f bus/mirror-packages/cran/bin/windows/contrib/$R_REL_VERSION/data.table_*.zip
    - rm -f bus/mirror-packages/cran/bin/windows/contrib/$R_DEVEL_VERSION/data.table_*.zip
    - rm -f bus/mirror-packages/cran/bin/windows/contrib/$R_OLDREL_VERSION/data.table_*.zip
    #- rm -f bus/mirror-packages/cran/bin/macosx/el-capitan/contrib/$R_REL_VERSION/data.table_*.tgz
    #- rm -f bus/mirror-packages/cran/bin/macosx/el-capitan/contrib/$R_DEVEL_VERSION/data.table_*.tgz
    #- rm -f bus/mirror-packages/cran/bin/macosx/el-capitan/contrib/$R_OLDREL_VERSION/data.table_*.tgz
    ## merge mirror-packages and R devel packages
    - mv bus/mirror-packages/cran bus/$CI_JOB_NAME/
    ## publish package sources
    - mkdir -p bus/$CI_JOB_NAME/cran/library bus/$CI_JOB_NAME/cran/doc
    - mv $(ls -1t bus/build/cran/src/contrib/data.table_*.tar.gz | head -n 1) bus/$CI_JOB_NAME/cran/src/contrib
    - Rscript -e 'tools::write_PACKAGES(contrib.url("bus/integration/cran", type="source"), type="source", fields="Revision", addFiles=TRUE)'
    ## publish binaries
    - Rscript -e 'move.bin("test-rel-win", Sys.getenv("R_REL_VERSION"), os.type="windows")'
    - Rscript -e 'move.bin("test-dev-win", Sys.getenv("R_DEVEL_VERSION"), os.type="windows", silent=TRUE)'
    - Rscript -e 'move.bin("test-old-win", Sys.getenv("R_OLDREL_VERSION"), os.type="windows")'
    - Rscript -e 'tools::write_PACKAGES(contrib.url("bus/integration/cran", type="win.binary", ver=Sys.getenv("R_REL_VERSION")), type="win.binary", fields="Revision", addFiles=TRUE)'
    - Rscript -e 'tools::write_PACKAGES(contrib.url("bus/integration/cran", type="win.binary", ver=Sys.getenv("R_DEVEL_VERSION")), type="win.binary", fields="Revision", addFiles=TRUE)'
    - Rscript -e 'tools::write_PACKAGES(contrib.url("bus/integration/cran", type="win.binary", ver=Sys.getenv("R_OLDREL_VERSION")), type="win.binary", fields="Revision", addFiles=TRUE)'
    #- Rscript -e 'move.bin("test-rel-mac", Sys.getenv("R_REL_VERSION"), os.type="macosx")'
    #- Rscript -e 'move.bin("test-dev-mac", Sys.getenv("R_DEVEL_VERSION"), os.type="macosx")'
    #- Rscript -e 'move.bin("test-old-mac", Sys.getenv("R_OLDREL_VERSION"), os.type="macosx")'
    #- Rscript -e 'tools::write_PACKAGES(contrib.url("bus/integration/cran", type="mac.binary.el-capitan", ver=Sys.getenv("R_REL_VERSION")), type="mac.binary.el-capitan", fields="Revision", addFiles=TRUE)'
    #- Rscript -e 'tools::write_PACKAGES(contrib.url("bus/integration/cran", type="mac.binary.el-capitan", ver=Sys.getenv("R_DEVEL_VERSION")), type="mac.binary.el-capitan", fields="Revision", addFiles=TRUE)'
    #- Rscript -e 'tools::write_PACKAGES(contrib.url("bus/integration/cran", type="mac.binary.el-capitan", ver=Sys.getenv("R_OLDREL_VERSION")), type="mac.binary.el-capitan", fields="Revision", addFiles=TRUE)'
    ## install all pkgs to render html and double check successful installation of all devel packages
    - mkdir -p /tmp/opencran/library /tmp/opencran/doc/html ## reset R_LIBS_USER to re-install all with html because pkgdown image has pre installed curl knitr
    - R_LIBS_USER="" Rscript -e 'install.packages("data.table", dependencies=TRUE, lib="/tmp/opencran/library", repos=file.path("file:",normalizePath("bus/integration/cran")), INSTALL_opts="--html", quiet=TRUE)'
    - Rscript -e 'packageVersion("data.table", lib.loc="/tmp/opencran/library")'
    ## CRAN style web/CRAN_web.css
    - wget -q -P bus/integration/cran/web https://cran.r-project.org/web/CRAN_web.css
    ## web/packages/$pkg/index.html
    - Rscript -e 'sapply(rownames(installed.packages(lib.loc="/tmp/opencran/library", priority="NA")), package.index, lib.loc="/tmp/opencran/library")'
    ## R docs, html, css, icons
    - Rscript -e 'doc.copy(repodir="/tmp/opencran")'
    ## Update packages.html, fix paths
    - Rscript -e 'setwd("/tmp/opencran/doc/html"); make.packages.html(lib.loc="../../library", docdir="/tmp/opencran/doc"); tmp<-readLines(f<-"/tmp/opencran/doc/html/packages.html"); writeLines(gsub("file:///../../library","../../library", tmp, fixed=TRUE), f)'
    - mv /tmp/opencran/doc bus/integration/cran/
    ## library html manual, vignettes
    - Rscript -e 'lib.copy(lib.from="/tmp/opencran/library")'
    ## web/checks/$pkg/$job 00install.out, 00check.log, *.Rout, memtest.csv, memtest.png ## memtest not available for now #5764
    - Rscript -e 'sapply(names(test.jobs), check.copy, simplify=FALSE)'
    ## web/packages/$pkg/$pkg.pdf
    - Rscript -e 'pdf.copy("data.table", "test-rel-lin")'
    ## web/checks/check_results_$pkg.html
    - Rscript -e 'check.index("data.table", names(test.jobs))'
    ## web/checks/check_flavors.html
    - Rscript -e 'check.flavors(names(test.jobs))'
    ## pkgdown merge
    - Rscript -e 'common_files<-function(path1, path2) intersect(list.files(path1, all.files=TRUE, no..=TRUE), list.files(path2, all.files=TRUE, no..=TRUE)); msg = if (length(f<-common_files("pkgdown","bus/integration/cran"))) paste(c("Following artifacts will be overwritten by pkgdown artifacts:", paste0("  ", f)), collapse="\n") else "No overlapping files from pkgdown artifacts"; message(msg); q("no")'
    - mv pkgdown/* bus/integration/cran/
    ## cleanup artifacts from other jobs
    - mkdir tmpbus
    - mv bus/$CI_JOB_NAME tmpbus
    - rm -r bus
    - mv tmpbus bus
  <<: *artifacts

## publish
# R repository
# test jobs summaries
# html documentation of all packages in repo
# pkgdown website
pages:
  stage: deploy
  environment: production
  tags:
    - linux
  only:
    - master
  image: ubuntu
  needs: ["integration"]
  script:
    - mkdir -p public
    - cp -r bus/integration/cran/* public
    - cat public/src/contrib/PACKAGES
  artifacts:
    expire_in: 2 weeks
    paths:
      - public
